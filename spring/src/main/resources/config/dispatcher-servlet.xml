<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd 
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd  
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd ">
                            
    <!--  @Controller 컴포넌트 스캔 시작 -->
    <context:component-scan base-package="com.spring">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>
    <!--  @Controller 컴포넌트 스캔 끝 -->
    
    <!-- annotation 활성화 
        ex) @component
     -->
    <mvc:annotation-driven />
    
    <!-- default-servlet-handler 설정  
        dispatcher-servlet에서 처리 못하는 요청 중
        WAS가 제공하는 Default Servlet 대신 *.html, *.css같은 요청을 처리
    -->
    <mvc:default-servlet-handler/>

    <!-- aspectj를 통한 aop autoproxy 적용 -->
    <aop:aspectj-autoproxy/>
    
    <mvc:resources location="/resources/" mapping="/resources/**" />

    <!-- Controller에서 처리 로직이 없는 경우 세팅 -->
    <bean id="simpleUrlHandlerMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="order" value="1" />
        <property name="alwaysUseFullPath" value="true" />
        <property name="mappings">
            <props>
                <prop key="/**/*.view">urlFilenameViewController</prop>
            </props>
        </property>
    </bean>
    <bean id="urlFilenameViewController"  class="org.springframework.web.servlet.mvc.UrlFilenameViewController" />
    
    <!-- viewResolver 설정 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
        <property name="prefix" value="/WEB-INF/views/"/> 
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <!-- tiles 설정 -->
    <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
        <property name="order" value="2"/>
    </bean>

    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>classpath*:config/tiles.xml</value>
            </list>
        </property>
    </bean>
    
    <!-- file Upload -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="107374182400" /> <!-- 100GB -->
        <property name="maxInMemorySize" value="5242880" /> <!-- 5MB -->
    </bean>
    
    <!-- interceptor 설정 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**/*.do" />
            <mvc:mapping path="/**/*.view" />
            <bean id="authInterceptor" class="com.spring.prj.sevlet.interceptor.AuthInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

</beans>
